body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f5;
    margin: 0;
    padding: 0;
}

.container {
    width: 80%;
    margin: auto;
    padding: 20px;
}

.dropdown-section {
    text-align: center;
    margin: 20px 0;
}

h1 {
    color: #333;
}

.dropdowns select {
    margin: 10px;
    padding: 15px; /* Increase padding */
    font-size: 18px; /* Increase font size */
    border-radius: 10px;
    border: 1px solid #ccc;
}

button {
    padding: 15px 30px;
    background-color: #28a745;
    font-size: 18px;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
}

button:hover {
    background-color: #218838;
}

/* Improved CSS for Sections 2 to 5 */
.data-section {
    margin-top: 30px;
}

.data-section h2 {
    font-size: 24px; /* Increase font size */
    color: #333;
    margin-bottom: 15px; /* Increase margin */
}

.data-row {
    display: flex;
    overflow-x: auto; /* Allow horizontal scrolling */
    padding: 10px 0;
    gap: 10px;
}

.data-box {
    flex: 0 0 auto; /* Prevent boxes from shrinking */
    width: 200px; /* Increase width */
    background-color: white;
    padding: 10px; /* Increase padding */
    border-radius: 10px; /* Increase border radius */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Increase shadow */
    text-align: center;
    transition: transform 0.2s;
    box-sizing: border-box;
    height: 180px; /* Increase height */
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Align content within the box */
}

.data-box img {
    width: 100%;
    height: 80px; /* Increase height for images */
    object-fit: cover;
    border-bottom: 1px solid #ddd;
    border-radius: 12px 12px 0 0;
}

.data-box .caption {
    font-weight: bold;
    margin: 10px 0; /* Increase margin */
    font-size: 18px; /* Increase font size */
}

.tags {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 4px; /* Increase gap */
    margin-top: 4px; /* Increase margin-top */
}

.tags span {
    padding: 6px 12px; /* Increase padding */
    background-color: #add5f9;
    border-radius: 5px;
    color: #080808;
    font-size: 15px; /* Increase font size */
}

/* Responsiveness */
@media (max-width: 768px) {
    .data-box {
        width: 160px; /* Adjust width for medium screens */
    }
}

@media (max-width: 480px) {
    .data-box {
        width: 140px; /* Adjust width for small screens */
    }
}
.hidden {
    display: none;
}
/* Styling for the Local Videos Section */
#slideshow-images {
    margin-top: 30px;
}

#slideshow-images h2 {
    font-size: 24px; /* Increase font size for the section title */
    color: #333;
    margin-bottom: 15px; /* Increase margin */
}

.video-row {
    display: flex;
    overflow-x: auto; /* Allow horizontal scrolling */
    padding: 10px 0;
    gap: 15px; /* Increase gap between video boxes */
}

.video-box {
    flex: 0 0 auto; /* Prevent boxes from shrinking */
    width: 200px; /* Increase width */
    background-color: white;
    border-radius: 10px; /* Increase border radius */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Increase shadow */
    text-align: center;
    box-sizing: border-box;
}

.video-box video {
    width: 100%;
    height: 120px; /* Adjust height for the video */
    object-fit: cover;
    border-radius: 10px; /* Add border radius for videos */
}
...................................
scipt
async function fetchData() {
    const sport = document.getElementById('sportDropdown').value;
    const homeTeam = document.getElementById('homeTeamDropdown').value;
    const awayTeam = document.getElementById('awayTeamDropdown').value;

    const response = await fetch('/api/getData', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            sport: sport,
            homeTeam: homeTeam,
            awayTeam: awayTeam
        }),
    });

    const data = await response.json();

    // Show section titles and data
    displayData('historicalMatches', data.historical_data);
    displayData('recentMatches', data.recent_matches_data);
    displayData('buildups', data.buildups_data);
    displayData('informPlayers', data.inform_player_data);
    displaySlideShowImages('slideshow-images');  // Ensure this function is called after data is fetched
}

function displayData(sectionId, data) {
    const section = document.getElementById(sectionId);
    if (section) {
        const title = section.querySelector('h2');
        const dataRow = section.querySelector('.data-row');

        // Show the section title if data is present
        if (data.length > 0) {
            title.classList.remove('hidden');
        }

        // Populate the data row
        dataRow.innerHTML = data.map(item => `
            <div class="data-box">
                <img src="${item.URL}" alt="${item.caption_title}">
                <div class="caption">${item.caption_title}</div>
                <div class="tags">${item.for_which_team_fan.map(team => `<span>${team}</span>`).join(' ')}</div>
            </div>
        `).join('');
    }
}

function displaySlideShowImages(sectionId) {
    const videoRow = document.getElementById('slideshow-images')?.querySelector('.video-row');
    const section = document.getElementById(sectionId);
        const title = section.querySelector('h2');
        // const dataRow = section.querySelector('.data-row');
        title.classList.remove('hidden');
    // }
    if (videoRow) {
        // Example data for local videos (should be fetched or provided dynamically)
        const videoData = [
            { URL: 'path/to/local/video1.mp4', caption_title: 'Video 1' },
            { URL: 'path/to/local/video2.mp4', caption_title: 'Video 2' }
        ];

        // Populate the video row
        videoRow.innerHTML = videoData.map(video => `
            <div class="video-box">
                <video src="${video.URL}" controls></video>
                <div class="caption">${video.caption_title}</div>
            </div>
        `).join('');
    } else {
        console.error('The video-row element is not found.');
    }
}
.....................
index
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sports Data</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
</head>
<body>
    <div class="container">
        <!-- Section 1: Dropdowns and Submit Button -->
        <section class="dropdown-section">
            <h1>Binge with AI</h1>
            <div class="dropdowns">
                <select id="sportDropdown">
                    <option value="NFL">NFL</option>
                    <option value="NBA">NBA</option>
                    <option value="MLB">MLB</option>
                </select>

                <select id="homeTeamDropdown">
                    <option value="Patriots">Patriots</option>
                    <option value="Seahawks">Seahawks</option>
                    <option value="Chiefs">Chiefs</option>
                    <option value="Lions">Lions</option>
                </select>

                <select id="awayTeamDropdown">
                    <option value="Patriots">Patriots</option>
                    <option value="Seahawks">Seahawks</option>
                    <option value="Chiefs">Chiefs</option>
                    <option value="Lions">Lions</option>
                </select>
            </div>
            <button id="submitButton" onclick="fetchData()">Submit</button>
        </section>

        <!-- Section 2-5: Display Data with Hidden Titles -->
        <section id="historicalMatches" class="data-section">
            <h2 class="hidden">Historical Matches</h2>
            <div class="data-row"></div>
        </section>
        <section id="recentMatches" class="data-section">
            <h2 class="hidden">Recent Matches</h2>
            <div class="data-row"></div>
        </section>
        <section id="buildups" class="data-section">
            <h2 class="hidden">Buildups</h2>
            <div class="data-row"></div>
        </section>
        <section id="informPlayers" class="data-section">
            <h2 class="hidden">Inform Players</h2>
            <div class="data-row"></div>
        </section>
        <section id="slideshow-images" class="data-section">
            <h2 class="hidden">Slideshow Images</h2>
            <div class="video-row"></div>
        </section>
        
    </div>

    <script src="{{ url_for('static', filename='js/script.js') }}"></script>
</body>
</html>
............................
app
from flask import Flask, request, jsonify, render_template

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/api/getData', methods=['POST'])
def get_data():
    data = request.get_json()

    # Sample mock data
    response_data = {
        "historical_data": [
            {"URL": "https://via.placeholder.com/150", "caption_title": "Historic Match 1", "for_which_team_fan": [data['homeTeam'], data['awayTeam']]},
            {"URL": "https://via.placeholder.com/150", "caption_title": "Historic Match 2", "for_which_team_fan": [data['homeTeam']]},
        ],
        "recent_matches_data": [
            {"URL": "https://via.placeholder.com/150", "caption_title": "Recent Match 1", "for_which_team_fan": [data['awayTeam']]},
        ],
        "buildups_data": [
            {"URL": "https://via.placeholder.com/150", "caption_title": "Buildup 1", "for_which_team_fan": [data['homeTeam'], data['awayTeam']]},
        ],
        "inform_player_data": [
            {"URL": "https://via.placeholder.com/150", "caption_title": "Inform Player 1", "for_which_team_fan": [data['homeTeam']]},
        ],
    }
    
    return jsonify(response_data)

if __name__ == '__main__':
    app.run(debug=True)
